<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchQueueLog">
	<resultMap type="org.mine.model.BatchQueueLog" id="BaseResultMap">
		<result column="execution_instance" property="executionInstance"/>
		<result column="queue_id" property="queueId"/>
		<result column="queue_name" property="queueName"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="queue_status" property="queueStatus"/>
		<result column="queue_errmsg" property="queueErrmsg"/>
		<result column="create_date" property="createDate"/>
		<result column="time_stamp" property="timeStamp"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		execution_instance,queue_id,queue_name,start_time,end_time,queue_status,
		queue_errmsg,create_date,time_stamp,valid_status,remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionInstance != null">execution_instance,</if>
			<if test="queueId != null">queue_id,</if>
			<if test="queueName != null">queue_name,</if>
			<if test="startTime != null">start_time,</if>
			<if test="endTime != null">end_time,</if>
			<if test="queueStatus != null">queue_status,</if>
			<if test="queueErrmsg != null">queue_errmsg,</if>
			<if test="createDate != null">create_date,</if>
			<if test="timeStamp != null">time_stamp,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionInstance != null">#{executionInstance},</if>
			<if test="queueId != null">#{queueId},</if>
			<if test="queueName != null">#{queueName},</if>
			<if test="startTime != null">#{startTime},</if>
			<if test="endTime != null">#{endTime},</if>
			<if test="queueStatus != null">#{queueStatus},</if>
			<if test="queueErrmsg != null">#{queueErrmsg},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="timeStamp != null">#{timeStamp},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchQueueLog">
		insert into batch_queue_log
		<include refid="BatchQueueLog.Base_Insert_Column"/>
		values 
		<include refid="BatchQueueLog.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchQueueLog">
		insert into batch_queue_log
		<include refid="BatchQueueLog.Base_Insert_Column"/>
		values 
		<include refid="BatchQueueLog.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_queue_log
		(execution_instance,queue_id,queue_name,start_time,end_time
			,queue_status,queue_errmsg,create_date,time_stamp
			,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.executionInstance},#{item.queueId},#{item.queueName},#{item.startTime},#{item.endTime}
				,#{item.queueStatus},#{item.queueErrmsg},#{item.createDate},#{item.timeStamp}
				,#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueLog.Base_Select_List"/>
		from batch_queue_log
		where execution_instance = #{executionInstance}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueLog.Base_Select_List"/>
		from batch_queue_log
		where execution_instance = #{executionInstance} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueLog.Base_Select_List"/>
		from batch_queue_log
		where execution_instance = #{executionInstance} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchQueueLog">
		delete from batch_queue_log
		where
		execution_instance = #{executionInstance}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchQueueLog">
		delete from batch_queue_log
		where
		execution_instance = #{executionInstance} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchQueueLog">
		update batch_queue_log
		<trim prefix="set" suffixOverrides=",">
			<if test="queueId != null">queue_id = #{queueId},</if>
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="queueStatus != null">queue_status = #{queueStatus},</if>
			<if test="queueErrmsg != null">queue_errmsg = #{queueErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchQueueLog">
		update batch_queue_log
		<trim prefix="set" suffixOverrides=",">
			<if test="queueId != null">queue_id = #{queueId},</if>
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="queueStatus != null">queue_status = #{queueStatus},</if>
			<if test="queueErrmsg != null">queue_errmsg = #{queueErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchQueueLog">
		update batch_queue_log
		<trim prefix="set" suffixOverrides=",">
			<if test="queueId != null">queue_id = #{queueId},</if>
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="queueStatus != null">queue_status = #{queueStatus},</if>
			<if test="queueErrmsg != null">queue_errmsg = #{queueErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchQueueLog">
		update batch_queue_log
		<trim prefix="set" suffixOverrides=",">
			<if test="queueId != null">queue_id = #{queueId},</if>
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="queueStatus != null">queue_status = #{queueStatus},</if>
			<if test="queueErrmsg != null">queue_errmsg = #{queueErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance}
	</update>

	<update id="batchUpdateXML" parameterType="java.util.List">
		update batch_queue_log set
		<trim prefix="queue_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueId != null">
					when execution_instance = #{item.executionInstance} then #{item.queueId}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueName != null">
					when execution_instance = #{item.executionInstance} then #{item.queueName}
				</if>
			</foreach>
		</trim>
		<trim prefix="start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.startTime != null">
					when execution_instance = #{item.executionInstance} then #{item.startTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.endTime != null">
					when execution_instance = #{item.executionInstance} then #{item.endTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueStatus != null">
					when execution_instance = #{item.executionInstance} then #{item.queueStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_errmsg=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueErrmsg != null">
					when execution_instance = #{item.executionInstance} then #{item.queueErrmsg}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when execution_instance = #{item.executionInstance} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="time_stamp=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.timeStamp != null">
					when execution_instance = #{item.executionInstance} then #{item.timeStamp}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when execution_instance = #{item.executionInstance} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when execution_instance = #{item.executionInstance} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		execution_instance in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.executionInstance}
		</foreach>
	</update>
</mapper>