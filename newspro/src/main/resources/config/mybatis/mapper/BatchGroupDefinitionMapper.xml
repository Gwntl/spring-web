<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchGroupDefinition">
	<resultMap type="org.mine.model.BatchGroupDefinition" id="BaseResultMap">
		<result column="group_id" property="groupId"/>
		<result column="group_name" property="groupName"/>
		<result column="group_associate_queue_id" property="groupAssociateQueueId"/>
		<result column="group_execution_num" property="groupExecutionNum"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		group_id,group_name,group_associate_queue_id,group_execution_num,create_date,valid_status,
		remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="groupId != null">group_id,</if>
			<if test="groupName != null">group_name,</if>
			<if test="groupAssociateQueueId != null">group_associate_queue_id,</if>
			<if test="groupExecutionNum != null">group_execution_num,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="groupId != null">#{groupId},</if>
			<if test="groupName != null">#{groupName},</if>
			<if test="groupAssociateQueueId != null">#{groupAssociateQueueId},</if>
			<if test="groupExecutionNum != null">#{groupExecutionNum},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchGroupDefinition">
		insert into batch_group_definition
		<include refid="BatchGroupDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchGroupDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchGroupDefinition">
		insert into batch_group_definition
		<include refid="BatchGroupDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchGroupDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_group_definition
		(group_id,group_name,group_associate_queue_id,group_execution_num,create_date
			,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.groupId},#{item.groupName},#{item.groupAssociateQueueId},#{item.groupExecutionNum},#{item.createDate}
				,#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_id = #{groupId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_id = #{groupId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_id = #{groupId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchGroupDefinition">
		delete from batch_group_definition
		where
		group_id = #{groupId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchGroupDefinition">
		delete from batch_group_definition
		where
		group_id = #{groupId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchGroupDefinition">
		update batch_group_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="groupName != null">group_name = #{groupName},</if>
			<if test="groupAssociateQueueId != null">group_associate_queue_id = #{groupAssociateQueueId},</if>
			<if test="groupExecutionNum != null">group_execution_num = #{groupExecutionNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where group_id = #{groupId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchGroupDefinition">
		update batch_group_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="groupName != null">group_name = #{groupName},</if>
			<if test="groupAssociateQueueId != null">group_associate_queue_id = #{groupAssociateQueueId},</if>
			<if test="groupExecutionNum != null">group_execution_num = #{groupExecutionNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where group_id = #{groupId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchGroupDefinition">
		update batch_group_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="groupName != null">group_name = #{groupName},</if>
			<if test="groupAssociateQueueId != null">group_associate_queue_id = #{groupAssociateQueueId},</if>
			<if test="groupExecutionNum != null">group_execution_num = #{groupExecutionNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where group_id = #{groupId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="java.util.List">
		update batch_group_definition set
		<trim prefix="group_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.groupName != null">
					when group_id = #{item.groupId} then #{item.groupName}
				</if>
			</foreach>
		</trim>
		<trim prefix="group_associate_queue_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.groupAssociateQueueId != null">
					when group_id = #{item.groupId} then #{item.groupAssociateQueueId}
				</if>
			</foreach>
		</trim>
		<trim prefix="group_execution_num=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.groupExecutionNum != null">
					when group_id = #{item.groupId} then #{item.groupExecutionNum}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when group_id = #{item.groupId} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when group_id = #{item.groupId} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when group_id = #{item.groupId} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		group_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.groupId}
		</foreach>
	</update>
	<update id="batchUpdate" parameterType="org.mine.model.BatchGroupDefinition">
		update batch_group_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="groupName != null">group_name = #{groupName},</if>
			<if test="groupAssociateQueueId != null">group_associate_queue_id = #{groupAssociateQueueId},</if>
			<if test="groupExecutionNum != null">group_execution_num = #{groupExecutionNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where group_id = #{groupId}
	</update>

	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_associate_queue_id = #{groupAssociateQueueId}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_associate_queue_id = #{groupAssociateQueueId} and valid_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchGroupDefinition.Base_Select_List"/>
		from batch_group_definition
		where group_associate_queue_id = #{groupAssociateQueueId} for update
	</select>

</mapper>