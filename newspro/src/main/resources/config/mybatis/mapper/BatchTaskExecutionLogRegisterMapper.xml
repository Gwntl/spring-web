<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTaskExecutionLogRegister">
	<resultMap type="org.mine.model.BatchTaskExecutionLogRegister" id="BaseResultMap">
		<result column="task_execution_id" property="taskExecutionId"/>
		<result column="task_job_id" property="taskJobId"/>
		<result column="task_job_name" property="taskJobName"/>
		<result column="task_job_associate_id" property="taskJobAssociateId"/>
		<result column="task_start_time" property="taskStartTime"/>
		<result column="task_end_time" property="taskEndTime"/>
		<result column="task_job_status" property="taskJobStatus"/>
		<result column="task_job_errmsg" property="taskJobErrmsg"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		task_execution_id,task_job_id,task_job_name,task_job_associate_id,task_start_time,task_end_time,
		task_job_status,task_job_errmsg,create_date,valid_status,remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="taskExecutionId != null">task_execution_id,</if>
			<if test="taskJobId != null">task_job_id,</if>
			<if test="taskJobName != null">task_job_name,</if>
			<if test="taskJobAssociateId != null">task_job_associate_id,</if>
			<if test="taskStartTime != null">task_start_time,</if>
			<if test="taskEndTime != null">task_end_time,</if>
			<if test="taskJobStatus != null">task_job_status,</if>
			<if test="taskJobErrmsg != null">task_job_errmsg,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="taskExecutionId != null">#{taskExecutionId},</if>
			<if test="taskJobId != null">#{taskJobId},</if>
			<if test="taskJobName != null">#{taskJobName},</if>
			<if test="taskJobAssociateId != null">#{taskJobAssociateId},</if>
			<if test="taskStartTime != null">#{taskStartTime},</if>
			<if test="taskEndTime != null">#{taskEndTime},</if>
			<if test="taskJobStatus != null">#{taskJobStatus},</if>
			<if test="taskJobErrmsg != null">#{taskJobErrmsg},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		insert into batch_task_execution_log_register
		<include refid="BatchTaskExecutionLogRegister.Base_Insert_Column"/>
		values 
		<include refid="BatchTaskExecutionLogRegister.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		insert into batch_task_execution_log_register
		<include refid="BatchTaskExecutionLogRegister.Base_Insert_Column"/>
		values 
		<include refid="BatchTaskExecutionLogRegister.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_task_execution_log_register
		(task_execution_id,task_job_id,task_job_name,task_job_associate_id,task_start_time
			,task_end_time,task_job_status,task_job_errmsg,create_date
			,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.taskExecutionId},#{item.taskJobId},#{item.taskJobName},#{item.taskJobAssociateId},#{item.taskStartTime}
				,#{item.taskEndTime},#{item.taskJobStatus},#{item.taskJobErrmsg},#{item.createDate}
				,#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskExecutionLogRegister.Base_Select_List"/>
		from batch_task_execution_log_register
		where task_execution_id = #{taskExecutionId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskExecutionLogRegister.Base_Select_List"/>
		from batch_task_execution_log_register
		where task_execution_id = #{taskExecutionId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskExecutionLogRegister.Base_Select_List"/>
		from batch_task_execution_log_register
		where task_execution_id = #{taskExecutionId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		delete from batch_task_execution_log_register
		where
		task_execution_id = #{taskExecutionId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		delete from batch_task_execution_log_register
		where
		task_execution_id = #{taskExecutionId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		update batch_task_execution_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="taskJobId != null">task_job_id = #{taskJobId},</if>
			<if test="taskJobName != null">task_job_name = #{taskJobName},</if>
			<if test="taskJobAssociateId != null">task_job_associate_id = #{taskJobAssociateId},</if>
			<if test="taskStartTime != null">task_start_time = #{taskStartTime},</if>
			<if test="taskEndTime != null">task_end_time = #{taskEndTime},</if>
			<if test="taskJobStatus != null">task_job_status = #{taskJobStatus},</if>
			<if test="taskJobErrmsg != null">task_job_errmsg = #{taskJobErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where task_execution_id = #{taskExecutionId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		update batch_task_execution_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="taskJobId != null">task_job_id = #{taskJobId},</if>
			<if test="taskJobName != null">task_job_name = #{taskJobName},</if>
			<if test="taskJobAssociateId != null">task_job_associate_id = #{taskJobAssociateId},</if>
			<if test="taskStartTime != null">task_start_time = #{taskStartTime},</if>
			<if test="taskEndTime != null">task_end_time = #{taskEndTime},</if>
			<if test="taskJobStatus != null">task_job_status = #{taskJobStatus},</if>
			<if test="taskJobErrmsg != null">task_job_errmsg = #{taskJobErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where task_execution_id = #{taskExecutionId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		update batch_task_execution_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="taskJobId != null">task_job_id = #{taskJobId},</if>
			<if test="taskJobName != null">task_job_name = #{taskJobName},</if>
			<if test="taskJobAssociateId != null">task_job_associate_id = #{taskJobAssociateId},</if>
			<if test="taskStartTime != null">task_start_time = #{taskStartTime},</if>
			<if test="taskEndTime != null">task_end_time = #{taskEndTime},</if>
			<if test="taskJobStatus != null">task_job_status = #{taskJobStatus},</if>
			<if test="taskJobErrmsg != null">task_job_errmsg = #{taskJobErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where task_execution_id = #{taskExecutionId} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchTaskExecutionLogRegister">
		update batch_task_execution_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="taskJobId != null">task_job_id = #{taskJobId},</if>
			<if test="taskJobName != null">task_job_name = #{taskJobName},</if>
			<if test="taskJobAssociateId != null">task_job_associate_id = #{taskJobAssociateId},</if>
			<if test="taskStartTime != null">task_start_time = #{taskStartTime},</if>
			<if test="taskEndTime != null">task_end_time = #{taskEndTime},</if>
			<if test="taskJobStatus != null">task_job_status = #{taskJobStatus},</if>
			<if test="taskJobErrmsg != null">task_job_errmsg = #{taskJobErrmsg},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where task_execution_id = #{taskExecutionId}
	</update>

	<update id="batchUpdateXML" parameterType="java.util.List">
		update batch_task_execution_log_register set
		<trim prefix="task_job_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskJobId != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskJobId}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_job_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskJobName != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskJobName}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_job_associate_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskJobAssociateId != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskJobAssociateId}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskStartTime != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskStartTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskEndTime != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskEndTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_job_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskJobStatus != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskJobStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_job_errmsg=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskJobErrmsg != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.taskJobErrmsg}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when task_execution_id = #{item.taskExecutionId} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		task_execution_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.taskExecutionId}
		</foreach>
	</update>
</mapper>