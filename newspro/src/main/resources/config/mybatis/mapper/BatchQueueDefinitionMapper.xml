<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchQueueDefinition">
	<resultMap type="org.mine.model.BatchQueueDefinition" id="BaseResultMap">
		<result column="queue_id" property="queueId"/>
		<result column="queue_name" property="queueName"/>
		<result column="queue_exc_flag" property="queueExcFlag"/>
		<result column="queue_trigger_id" property="queueTriggerId"/>
		<result column="queue_executor" property="queueExecutor"/>
		<result column="queue_init_value" property="queueInitValue"/>
		<result column="queue_execution_num" property="queueExecutionNum"/>
		<result column="queue_same_time_run" property="queueSameTimeRun"/>
		<result column="queue_max_run_num" property="queueMaxRunNum"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		queue_id,queue_name,queue_exc_flag,queue_trigger_id,queue_executor,queue_init_value,
		queue_execution_num,queue_same_time_run,queue_max_run_num,create_date,valid_status,
		remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="queueId != null">queue_id,</if>
			<if test="queueName != null">queue_name,</if>
			<if test="queueExcFlag != null">queue_exc_flag,</if>
			<if test="queueTriggerId != null">queue_trigger_id,</if>
			<if test="queueExecutor != null">queue_executor,</if>
			<if test="queueInitValue != null">queue_init_value,</if>
			<if test="queueExecutionNum != null">queue_execution_num,</if>
			<if test="queueSameTimeRun != null">queue_same_time_run,</if>
			<if test="queueMaxRunNum != null">queue_max_run_num,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="queueId != null">#{queueId},</if>
			<if test="queueName != null">#{queueName},</if>
			<if test="queueExcFlag != null">#{queueExcFlag},</if>
			<if test="queueTriggerId != null">#{queueTriggerId},</if>
			<if test="queueExecutor != null">#{queueExecutor},</if>
			<if test="queueInitValue != null">#{queueInitValue},</if>
			<if test="queueExecutionNum != null">#{queueExecutionNum},</if>
			<if test="queueSameTimeRun != null">#{queueSameTimeRun},</if>
			<if test="queueMaxRunNum != null">#{queueMaxRunNum},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchQueueDefinition">
		insert into batch_queue_definition
		<include refid="BatchQueueDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchQueueDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchQueueDefinition">
		insert into batch_queue_definition
		<include refid="BatchQueueDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchQueueDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_queue_definition
		(queue_id,queue_name,queue_exc_flag,queue_trigger_id,queue_executor
			,queue_init_value,queue_execution_num,queue_same_time_run,queue_max_run_num
			,create_date,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.queueId},#{item.queueName},#{item.queueExcFlag},#{item.queueTriggerId},#{item.queueExecutor}
				,#{item.queueInitValue},#{item.queueExecutionNum},#{item.queueSameTimeRun},#{item.queueMaxRunNum}
				,#{item.createDate},#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_id = #{queueId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_id = #{queueId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_id = #{queueId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchQueueDefinition">
		delete from batch_queue_definition
		where
		queue_id = #{queueId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchQueueDefinition">
		delete from batch_queue_definition
		where
		queue_id = #{queueId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchQueueDefinition">
		update batch_queue_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="queueExcFlag != null">queue_exc_flag = #{queueExcFlag},</if>
			<if test="queueTriggerId != null">queue_trigger_id = #{queueTriggerId},</if>
			<if test="queueExecutor != null">queue_executor = #{queueExecutor},</if>
			<if test="queueInitValue != null">queue_init_value = #{queueInitValue},</if>
			<if test="queueExecutionNum != null">queue_execution_num = #{queueExecutionNum},</if>
			<if test="queueSameTimeRun != null">queue_same_time_run = #{queueSameTimeRun},</if>
			<if test="queueMaxRunNum != null">queue_max_run_num = #{queueMaxRunNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where queue_id = #{queueId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchQueueDefinition">
		update batch_queue_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="queueExcFlag != null">queue_exc_flag = #{queueExcFlag},</if>
			<if test="queueTriggerId != null">queue_trigger_id = #{queueTriggerId},</if>
			<if test="queueExecutor != null">queue_executor = #{queueExecutor},</if>
			<if test="queueInitValue != null">queue_init_value = #{queueInitValue},</if>
			<if test="queueExecutionNum != null">queue_execution_num = #{queueExecutionNum},</if>
			<if test="queueSameTimeRun != null">queue_same_time_run = #{queueSameTimeRun},</if>
			<if test="queueMaxRunNum != null">queue_max_run_num = #{queueMaxRunNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where queue_id = #{queueId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchQueueDefinition">
		update batch_queue_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="queueExcFlag != null">queue_exc_flag = #{queueExcFlag},</if>
			<if test="queueTriggerId != null">queue_trigger_id = #{queueTriggerId},</if>
			<if test="queueExecutor != null">queue_executor = #{queueExecutor},</if>
			<if test="queueInitValue != null">queue_init_value = #{queueInitValue},</if>
			<if test="queueExecutionNum != null">queue_execution_num = #{queueExecutionNum},</if>
			<if test="queueSameTimeRun != null">queue_same_time_run = #{queueSameTimeRun},</if>
			<if test="queueMaxRunNum != null">queue_max_run_num = #{queueMaxRunNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where queue_id = #{queueId} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchQueueDefinition">
		update batch_queue_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="queueName != null">queue_name = #{queueName},</if>
			<if test="queueExcFlag != null">queue_exc_flag = #{queueExcFlag},</if>
			<if test="queueTriggerId != null">queue_trigger_id = #{queueTriggerId},</if>
			<if test="queueExecutor != null">queue_executor = #{queueExecutor},</if>
			<if test="queueInitValue != null">queue_init_value = #{queueInitValue},</if>
			<if test="queueExecutionNum != null">queue_execution_num = #{queueExecutionNum},</if>
			<if test="queueSameTimeRun != null">queue_same_time_run = #{queueSameTimeRun},</if>
			<if test="queueMaxRunNum != null">queue_max_run_num = #{queueMaxRunNum},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where queue_id = #{queueId}
	</update>

	<update id="batchUpdateXML" parameterType="java.util.List">
		update batch_queue_definition set
		<trim prefix="queue_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueName != null">
					when queue_id = #{item.queueId} then #{item.queueName}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_exc_flag=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueExcFlag != null">
					when queue_id = #{item.queueId} then #{item.queueExcFlag}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_trigger_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueTriggerId != null">
					when queue_id = #{item.queueId} then #{item.queueTriggerId}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_executor=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueExecutor != null">
					when queue_id = #{item.queueId} then #{item.queueExecutor}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_init_value=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueInitValue != null">
					when queue_id = #{item.queueId} then #{item.queueInitValue}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_execution_num=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueExecutionNum != null">
					when queue_id = #{item.queueId} then #{item.queueExecutionNum}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_same_time_run=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueSameTimeRun != null">
					when queue_id = #{item.queueId} then #{item.queueSameTimeRun}
				</if>
			</foreach>
		</trim>
		<trim prefix="queue_max_run_num=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.queueMaxRunNum != null">
					when queue_id = #{item.queueId} then #{item.queueMaxRunNum}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when queue_id = #{item.queueId} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when queue_id = #{item.queueId} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when queue_id = #{item.queueId} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		queue_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.queueId}
		</foreach>
	</update>
	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_exc_flag = #{queueExcFlag}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_exc_flag = #{queueExcFlag} and valid_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchQueueDefinition.Base_Select_List"/>
		from batch_queue_definition
		where queue_exc_flag = #{queueExcFlag} for update
	</select>

</mapper>