<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SchedulerRunnerHistory">
	<resultMap type="org.mine.model.SchedulerRunnerHistory" id="BaseResultMap">
		<result column="runner_id" property="runnerId"/>
		<result column="job_id" property="jobId"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="job_status" property="jobStatus"/>
		<result column="job_errmsg" property="jobErrmsg"/>
		<result column="vaild_status" property="vaildStatus"/>
	</resultMap>

	<sql id="Base_Select_List">
		runner_id,job_id,start_time,end_time,job_status,job_errmsg,
		vaild_status
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="runnerId != null">runner_id,</if>
			<if test="jobId != null">job_id,</if>
			<if test="startTime != null">start_time,</if>
			<if test="endTime != null">end_time,</if>
			<if test="jobStatus != null">job_status,</if>
			<if test="jobErrmsg != null">job_errmsg,</if>
			<if test="vaildStatus != null">vaild_status,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="runnerId != null">#{runnerId},</if>
			<if test="jobId != null">#{jobId},</if>
			<if test="startTime != null">#{startTime},</if>
			<if test="endTime != null">#{endTime},</if>
			<if test="jobStatus != null">#{jobStatus},</if>
			<if test="jobErrmsg != null">#{jobErrmsg},</if>
			<if test="vaildStatus != null">#{vaildStatus},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.SchedulerRunnerHistory">
		insert into scheduler_runner_history
		<include refid="SchedulerRunnerHistory.Base_Insert_Column"/>
		values 
		<include refid="SchedulerRunnerHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.SchedulerRunnerHistory">
		insert into scheduler_runner_history
		<include refid="SchedulerRunnerHistory.Base_Insert_Column"/>
		values 
		<include refid="SchedulerRunnerHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into scheduler_runner_history
		(runner_id,job_id,start_time,end_time,job_status
			,job_errmsg,vaild_status)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.runnerId},#{item.jobId},#{item.startTime},#{item.endTime},#{item.jobStatus}
				,#{item.jobErrmsg},#{item.vaildStatus})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="SchedulerRunnerHistory.Base_Select_List"/>
		from scheduler_runner_history
		where runner_id = #{runnerId} and job_id = #{jobId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="SchedulerRunnerHistory.Base_Select_List"/>
		from scheduler_runner_history
		where runner_id = #{runnerId} and job_id = #{jobId} and vaild_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="SchedulerRunnerHistory.Base_Select_List"/>
		from scheduler_runner_history
		where runner_id = #{runnerId} and job_id = #{jobId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.SchedulerRunnerHistory">
		delete from scheduler_runner_history
		where
		runner_id = #{runnerId} and job_id = #{jobId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.SchedulerRunnerHistory">
		delete from scheduler_runner_history
		where
		runner_id = #{runnerId} and job_id = #{jobId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.SchedulerRunnerHistory">
		update scheduler_runner_history
		<trim prefix="set" suffixOverrides=",">
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="jobStatus != null">job_status = #{jobStatus},</if>
			<if test="jobErrmsg != null">job_errmsg = #{jobErrmsg},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
		</trim>
		where runner_id = #{runnerId} and job_id = #{jobId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.SchedulerRunnerHistory">
		update scheduler_runner_history
		<trim prefix="set" suffixOverrides=",">
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="jobStatus != null">job_status = #{jobStatus},</if>
			<if test="jobErrmsg != null">job_errmsg = #{jobErrmsg},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
		</trim>
		where runner_id = #{runnerId} and job_id = #{jobId} and vaild_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.SchedulerRunnerHistory">
		update scheduler_runner_history
		<trim prefix="set" suffixOverrides=",">
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="jobStatus != null">job_status = #{jobStatus},</if>
			<if test="jobErrmsg != null">job_errmsg = #{jobErrmsg},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
		</trim>
		where runner_id = #{runnerId} and job_id = #{jobId} for update
	</update>

	<update id="batchUpdate" parameterType="org.mine.model.SchedulerRunnerHistory">
		update scheduler_runner_history
		<trim prefix="set" suffixOverrides=",">
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="jobStatus != null">job_status = #{jobStatus},</if>
			<if test="jobErrmsg != null">job_errmsg = #{jobErrmsg},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
		</trim>
		where runner_id = #{runnerId} and job_id = #{jobId}
	</update>

</mapper>