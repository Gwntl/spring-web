<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTriggerDefinition">
	<resultMap type="org.mine.model.BatchTriggerDefinition" id="BaseResultMap">
		<result column="trigger_id" property="triggerId"/>
		<result column="trigger_name" property="triggerName"/>
		<result column="trigger_start_time" property="triggerStartTime"/>
		<result column="trigger_end_time" property="triggerEndTime"/>
		<result column="trigger_crontrigger" property="triggerCrontrigger"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="trigger_remark" property="triggerRemark"/>
	</resultMap>

	<sql id="Base_Select_List">
		trigger_id,trigger_name,trigger_start_time,trigger_end_time,trigger_crontrigger,create_date,
		valid_status,trigger_remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="triggerId != null">trigger_id,</if>
			<if test="triggerName != null">trigger_name,</if>
			<if test="triggerStartTime != null">trigger_start_time,</if>
			<if test="triggerEndTime != null">trigger_end_time,</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="triggerRemark != null">trigger_remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="triggerId != null">#{triggerId},</if>
			<if test="triggerName != null">#{triggerName},</if>
			<if test="triggerStartTime != null">#{triggerStartTime},</if>
			<if test="triggerEndTime != null">#{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">#{triggerCrontrigger},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="triggerRemark != null">#{triggerRemark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTriggerDefinition">
		insert into batch_trigger_definition
		<include refid="BatchTriggerDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchTriggerDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTriggerDefinition">
		insert into batch_trigger_definition
		<include refid="BatchTriggerDefinition.Base_Insert_Column"/>
		values 
		<include refid="BatchTriggerDefinition.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_trigger_definition
		(trigger_id,trigger_name,trigger_start_time,trigger_end_time,trigger_crontrigger
			,create_date,valid_status,trigger_remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.triggerId},#{item.triggerName},#{item.triggerStartTime},#{item.triggerEndTime},#{item.triggerCrontrigger}
				,#{item.createDate},#{item.validStatus},#{item.triggerRemark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where trigger_id = #{triggerId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where trigger_id = #{triggerId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where trigger_id = #{triggerId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTriggerDefinition">
		delete from batch_trigger_definition
		where
		trigger_id = #{triggerId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTriggerDefinition">
		delete from batch_trigger_definition
		where
		trigger_id = #{triggerId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTriggerDefinition">
		update batch_trigger_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTriggerDefinition">
		update batch_trigger_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTriggerDefinition">
		update batch_trigger_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="java.util.List">
		update batch_trigger_definition set
		<trim prefix="trigger_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerName != null">
					when trigger_id = #{item.triggerId} then #{item.triggerName}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerStartTime != null">
					when trigger_id = #{item.triggerId} then #{item.triggerStartTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerEndTime != null">
					when trigger_id = #{item.triggerId} then #{item.triggerEndTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_crontrigger=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerCrontrigger != null">
					when trigger_id = #{item.triggerId} then #{item.triggerCrontrigger}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when trigger_id = #{item.triggerId} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when trigger_id = #{item.triggerId} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerRemark != null">
					when trigger_id = #{item.triggerId} then #{item.triggerRemark}
				</if>
			</foreach>
		</trim>
		where
		trigger_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.triggerId}
		</foreach>
	</update>
	<update id="batchUpdate" parameterType="org.mine.model.BatchTriggerDefinition">
		update batch_trigger_definition
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId}
	</update>

	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where null = #{taskAssociateGroupId}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where null = #{taskAssociateGroupId} and valid_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerDefinition.Base_Select_List"/>
		from batch_trigger_definition
		where null = #{taskAssociateGroupId} for update
	</select>

</mapper>