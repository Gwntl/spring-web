<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchJobDetailConf">
	<resultMap type="org.mine.model.BatchJobDetailConf" id="BaseResultMap">
		<result column="jobdetail_id" property="jobdetailId"/>
		<result column="jobdetail_name" property="jobdetailName"/>
		<result column="jobdetail_provider" property="jobdetailProvider"/>
		<result column="jobdetail_init_value" property="jobdetailInitValue"/>
		<result column="jobdetail_isConcurrent" property="jobdetailIsconcurrent"/>
		<result column="jobdetail_group" property="jobdetailGroup"/>
		<result column="jobdetail_actuator" property="jobdetailActuator"/>
		<result column="vaild_status" property="vaildStatus"/>
		<result column="jobdetail_remark" property="jobdetailRemark"/>
	</resultMap>

	<sql id="Base_Select_List">
		jobdetail_id,jobdetail_name,jobdetail_provider,jobdetail_init_value,jobdetail_isConcurrent,jobdetail_group,
		jobdetail_actuator,vaild_status,jobdetail_remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobdetailId != null">jobdetail_id,</if>
			<if test="jobdetailName != null">jobdetail_name,</if>
			<if test="jobdetailProvider != null">jobdetail_provider,</if>
			<if test="jobdetailInitValue != null">jobdetail_init_value,</if>
			<if test="jobdetailIsconcurrent != null">jobdetail_isConcurrent,</if>
			<if test="jobdetailGroup != null">jobdetail_group,</if>
			<if test="jobdetailActuator != null">jobdetail_actuator,</if>
			<if test="vaildStatus != null">vaild_status,</if>
			<if test="jobdetailRemark != null">jobdetail_remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobdetailId != null">#{jobdetailId},</if>
			<if test="jobdetailName != null">#{jobdetailName},</if>
			<if test="jobdetailProvider != null">#{jobdetailProvider},</if>
			<if test="jobdetailInitValue != null">#{jobdetailInitValue},</if>
			<if test="jobdetailIsconcurrent != null">#{jobdetailIsconcurrent},</if>
			<if test="jobdetailGroup != null">#{jobdetailGroup},</if>
			<if test="jobdetailActuator != null">#{jobdetailActuator},</if>
			<if test="vaildStatus != null">#{vaildStatus},</if>
			<if test="jobdetailRemark != null">#{jobdetailRemark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchJobDetailConf">
		insert into batch_job_detail_conf
		<include refid="BatchJobDetailConf.Base_Insert_Column"/>
		values 
		<include refid="BatchJobDetailConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchJobDetailConf">
		insert into batch_job_detail_conf
		<include refid="BatchJobDetailConf.Base_Insert_Column"/>
		values 
		<include refid="BatchJobDetailConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_job_detail_conf
		(jobdetail_id,jobdetail_name,jobdetail_provider,jobdetail_init_value,jobdetail_isConcurrent
			,jobdetail_group,jobdetail_actuator,vaild_status,jobdetail_remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.jobdetailId},#{item.jobdetailName},#{item.jobdetailProvider},#{item.jobdetailInitValue},#{item.jobdetailIsconcurrent}
				,#{item.jobdetailGroup},#{item.jobdetailActuator},#{item.vaildStatus},#{item.jobdetailRemark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobDetailConf.Base_Select_List"/>
		from batch_job_detail_conf
		where jobdetail_id = #{jobdetailId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobDetailConf.Base_Select_List"/>
		from batch_job_detail_conf
		where jobdetail_id = #{jobdetailId} and vaild_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobDetailConf.Base_Select_List"/>
		from batch_job_detail_conf
		where jobdetail_id = #{jobdetailId} for update
	</select>

	<delete id="deleteOne1" parameterType="java.util.HashMap">
		delete from batch_job_detail_conf
		where jobdetail_id = #{jobdetailId}
	</delete>

	<delete id="deleteOne1L" parameterType="java.util.HashMap">
		delete from batch_job_detail_conf
		where jobdetail_id = #{jobdetailId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchJobDetailConf">
		update batch_job_detail_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobdetailName != null">jobdetail_name = #{jobdetailName},</if>
			<if test="jobdetailProvider != null">jobdetail_provider = #{jobdetailProvider},</if>
			<if test="jobdetailInitValue != null">jobdetail_init_value = #{jobdetailInitValue},</if>
			<if test="jobdetailIsconcurrent != null">jobdetail_isConcurrent = #{jobdetailIsconcurrent},</if>
			<if test="jobdetailGroup != null">jobdetail_group = #{jobdetailGroup},</if>
			<if test="jobdetailActuator != null">jobdetail_actuator = #{jobdetailActuator},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobdetailRemark != null">jobdetail_remark = #{jobdetailRemark},</if>
		</trim>
		where jobdetail_id = #{jobdetailId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchJobDetailConf">
		update batch_job_detail_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobdetailName != null">jobdetail_name = #{jobdetailName},</if>
			<if test="jobdetailProvider != null">jobdetail_provider = #{jobdetailProvider},</if>
			<if test="jobdetailInitValue != null">jobdetail_init_value = #{jobdetailInitValue},</if>
			<if test="jobdetailIsconcurrent != null">jobdetail_isConcurrent = #{jobdetailIsconcurrent},</if>
			<if test="jobdetailGroup != null">jobdetail_group = #{jobdetailGroup},</if>
			<if test="jobdetailActuator != null">jobdetail_actuator = #{jobdetailActuator},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobdetailRemark != null">jobdetail_remark = #{jobdetailRemark},</if>
		</trim>
		where jobdetail_id = #{jobdetailId} and vaild_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchJobDetailConf">
		update batch_job_detail_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobdetailName != null">jobdetail_name = #{jobdetailName},</if>
			<if test="jobdetailProvider != null">jobdetail_provider = #{jobdetailProvider},</if>
			<if test="jobdetailInitValue != null">jobdetail_init_value = #{jobdetailInitValue},</if>
			<if test="jobdetailIsconcurrent != null">jobdetail_isConcurrent = #{jobdetailIsconcurrent},</if>
			<if test="jobdetailGroup != null">jobdetail_group = #{jobdetailGroup},</if>
			<if test="jobdetailActuator != null">jobdetail_actuator = #{jobdetailActuator},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobdetailRemark != null">jobdetail_remark = #{jobdetailRemark},</if>
		</trim>
		where jobdetail_id = #{jobdetailId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="java.util.List">
		update batch_job_detail_conf set
		<trim prefix="jobdetail_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailName != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailName}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_provider=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailProvider != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailProvider}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_init_value=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailInitValue != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailInitValue}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_isConcurrent=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailIsconcurrent != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailIsconcurrent}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_group=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailGroup != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailGroup}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_actuator=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailActuator != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailActuator}
				</if>
			</foreach>
		</trim>
		<trim prefix="vaild_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.vaildStatus != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.vaildStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="jobdetail_remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobdetailRemark != null">
					when jobdetail_id = #{item.jobdetailId} then #{item.jobdetailRemark}
				</if>
			</foreach>
		</trim>
		where
		jobdetail_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.jobdetailId}
		</foreach>
	</update>
	<update id="batchUpdate" parameterType="org.mine.model.BatchJobDetailConf">
		update batch_job_detail_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobdetailName != null">jobdetail_name = #{jobdetailName},</if>
			<if test="jobdetailProvider != null">jobdetail_provider = #{jobdetailProvider},</if>
			<if test="jobdetailInitValue != null">jobdetail_init_value = #{jobdetailInitValue},</if>
			<if test="jobdetailIsconcurrent != null">jobdetail_isConcurrent = #{jobdetailIsconcurrent},</if>
			<if test="jobdetailGroup != null">jobdetail_group = #{jobdetailGroup},</if>
			<if test="jobdetailActuator != null">jobdetail_actuator = #{jobdetailActuator},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobdetailRemark != null">jobdetail_remark = #{jobdetailRemark},</if>
		</trim>
		where jobdetail_id = #{jobdetailId}
	</update>

</mapper>