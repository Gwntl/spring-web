<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchJobExecute">
	<resultMap type="org.mine.model.BatchJobExecute" id="BaseResultMap">
		<result column="execute_job_id" property="executeJobId"/>
		<result column="execute_job_name" property="executeJobName"/>
		<result column="execute_step_id" property="executeStepId"/>
		<result column="execute_step_num" property="executeStepNum"/>
		<result column="execute_strong_depen" property="executeStrongDepen"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		execute_job_id,execute_job_name,execute_step_id,execute_step_num,execute_strong_depen,create_date,
		valid_status,remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executeJobId != null">execute_job_id,</if>
			<if test="executeJobName != null">execute_job_name,</if>
			<if test="executeStepId != null">execute_step_id,</if>
			<if test="executeStepNum != null">execute_step_num,</if>
			<if test="executeStrongDepen != null">execute_strong_depen,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executeJobId != null">#{executeJobId},</if>
			<if test="executeJobName != null">#{executeJobName},</if>
			<if test="executeStepId != null">#{executeStepId},</if>
			<if test="executeStepNum != null">#{executeStepNum},</if>
			<if test="executeStrongDepen != null">#{executeStrongDepen},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchJobExecute">
		insert into batch_job_execute
		<include refid="BatchJobExecute.Base_Insert_Column"/>
		values 
		<include refid="BatchJobExecute.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchJobExecute">
		insert into batch_job_execute
		<include refid="BatchJobExecute.Base_Insert_Column"/>
		values 
		<include refid="BatchJobExecute.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_job_execute
		(execute_job_id,execute_job_name,execute_step_id,execute_step_num,execute_strong_depen
			,create_date,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.executeJobId},#{item.executeJobName},#{item.executeStepId},#{item.executeStepNum},#{item.executeStrongDepen}
				,#{item.createDate},#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchJobExecute">
		delete from batch_job_execute
		where
		execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchJobExecute">
		delete from batch_job_execute
		where
		execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchJobExecute">
		update batch_job_execute
		<trim prefix="set" suffixOverrides=",">
			<if test="executeJobName != null">execute_job_name = #{executeJobName},</if>
			<if test="executeStepNum != null">execute_step_num = #{executeStepNum},</if>
			<if test="executeStrongDepen != null">execute_strong_depen = #{executeStrongDepen},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchJobExecute">
		update batch_job_execute
		<trim prefix="set" suffixOverrides=",">
			<if test="executeJobName != null">execute_job_name = #{executeJobName},</if>
			<if test="executeStepNum != null">execute_step_num = #{executeStepNum},</if>
			<if test="executeStrongDepen != null">execute_strong_depen = #{executeStrongDepen},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchJobExecute">
		update batch_job_execute
		<trim prefix="set" suffixOverrides=",">
			<if test="executeJobName != null">execute_job_name = #{executeJobName},</if>
			<if test="executeStepNum != null">execute_step_num = #{executeStepNum},</if>
			<if test="executeStrongDepen != null">execute_strong_depen = #{executeStrongDepen},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchJobExecute">
		update batch_job_execute
		<trim prefix="set" suffixOverrides=",">
			<if test="executeJobName != null">execute_job_name = #{executeJobName},</if>
			<if test="executeStepNum != null">execute_step_num = #{executeStepNum},</if>
			<if test="executeStrongDepen != null">execute_strong_depen = #{executeStrongDepen},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execute_job_id = #{executeJobId} and execute_step_id = #{executeStepId}
	</update>

	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId} and valid_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobExecute.Base_Select_List"/>
		from batch_job_execute
		where execute_job_id = #{executeJobId} for update
	</select>

</mapper>