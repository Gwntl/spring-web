<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTriggerConf">
	<resultMap type="org.mine.model.BatchTriggerConf" id="BaseResultMap">
		<result column="trigger_id" property="triggerId"/>
		<result column="trigger_name" property="triggerName"/>
		<result column="trigger_start_time" property="triggerStartTime"/>
		<result column="trigger_end_time" property="triggerEndTime"/>
		<result column="trigger_crontrigger" property="triggerCrontrigger"/>
		<result column="trigger_maintenance_date" property="triggerMaintenanceDate"/>
		<result column="vaild_status" property="vaildStatus"/>
		<result column="trigger_remark" property="triggerRemark"/>
	</resultMap>

	<sql id="Base_Select_List">
		trigger_id,trigger_name,trigger_start_time,trigger_end_time,trigger_crontrigger,trigger_maintenance_date,
		vaild_status,trigger_remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="triggerId != null">trigger_id,</if>
			<if test="triggerName != null">trigger_name,</if>
			<if test="triggerStartTime != null">trigger_start_time,</if>
			<if test="triggerEndTime != null">trigger_end_time,</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger,</if>
			<if test="triggerMaintenanceDate != null">trigger_maintenance_date,</if>
			<if test="vaildStatus != null">vaild_status,</if>
			<if test="triggerRemark != null">trigger_remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="triggerId != null">#{triggerId},</if>
			<if test="triggerName != null">#{triggerName},</if>
			<if test="triggerStartTime != null">#{triggerStartTime},</if>
			<if test="triggerEndTime != null">#{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">#{triggerCrontrigger},</if>
			<if test="triggerMaintenanceDate != null">#{triggerMaintenanceDate},</if>
			<if test="vaildStatus != null">#{vaildStatus},</if>
			<if test="triggerRemark != null">#{triggerRemark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTriggerConf">
		insert into batch_trigger_conf
		<include refid="BatchTriggerConf.Base_Insert_Column"/>
		values 
		<include refid="BatchTriggerConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTriggerConf">
		insert into batch_trigger_conf
		<include refid="BatchTriggerConf.Base_Insert_Column"/>
		values 
		<include refid="BatchTriggerConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_trigger_conf
		(trigger_id,trigger_name,trigger_start_time,trigger_end_time,trigger_crontrigger
			,trigger_maintenance_date,vaild_status,trigger_remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.triggerId},#{item.triggerName},#{item.triggerStartTime},#{item.triggerEndTime},#{item.triggerCrontrigger}
				,#{item.triggerMaintenanceDate},#{item.vaildStatus},#{item.triggerRemark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where trigger_id = #{triggerId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where trigger_id = #{triggerId} and vaild_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where trigger_id = #{triggerId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTriggerConf">
		delete from batch_trigger_conf
		where
		trigger_id = #{triggerId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTriggerConf">
		delete from batch_trigger_conf
		where
		trigger_id = #{triggerId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTriggerConf">
		update batch_trigger_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="triggerMaintenanceDate != null">trigger_maintenance_date = #{triggerMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTriggerConf">
		update batch_trigger_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="triggerMaintenanceDate != null">trigger_maintenance_date = #{triggerMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId} and vaild_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTriggerConf">
		update batch_trigger_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="triggerMaintenanceDate != null">trigger_maintenance_date = #{triggerMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="java.util.List">
		update batch_trigger_conf set
		<trim prefix="trigger_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerName != null">
					when trigger_id = #{item.triggerId} then #{item.triggerName}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerStartTime != null">
					when trigger_id = #{item.triggerId} then #{item.triggerStartTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerEndTime != null">
					when trigger_id = #{item.triggerId} then #{item.triggerEndTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_crontrigger=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerCrontrigger != null">
					when trigger_id = #{item.triggerId} then #{item.triggerCrontrigger}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_maintenance_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerMaintenanceDate != null">
					when trigger_id = #{item.triggerId} then #{item.triggerMaintenanceDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="vaild_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.vaildStatus != null">
					when trigger_id = #{item.triggerId} then #{item.vaildStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="trigger_remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.triggerRemark != null">
					when trigger_id = #{item.triggerId} then #{item.triggerRemark}
				</if>
			</foreach>
		</trim>
		where
		trigger_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.triggerId}
		</foreach>
	</update>
	<update id="batchUpdate" parameterType="org.mine.model.BatchTriggerConf">
		update batch_trigger_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="triggerName != null">trigger_name = #{triggerName},</if>
			<if test="triggerStartTime != null">trigger_start_time = #{triggerStartTime},</if>
			<if test="triggerEndTime != null">trigger_end_time = #{triggerEndTime},</if>
			<if test="triggerCrontrigger != null">trigger_crontrigger = #{triggerCrontrigger},</if>
			<if test="triggerMaintenanceDate != null">trigger_maintenance_date = #{triggerMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="triggerRemark != null">trigger_remark = #{triggerRemark},</if>
		</trim>
		where trigger_id = #{triggerId}
	</update>

	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where null = #{queueAutoFlag}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where null = #{queueAutoFlag} and vaild_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTriggerConf.Base_Select_List"/>
		from batch_trigger_conf
		where null = #{queueAutoFlag} for update
	</select>

</mapper>