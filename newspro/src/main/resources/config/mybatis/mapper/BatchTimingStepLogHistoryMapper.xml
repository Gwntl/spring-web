<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTimingStepLogHistory">
	<resultMap type="org.mine.model.BatchTimingStepLogHistory" id="BaseResultMap">
		<result column="history_step_execution_id" property="historyStepExecutionId"/>
		<result column="history_step_job_id" property="historyStepJobId"/>
		<result column="history_step_job_name" property="historyStepJobName"/>
		<result column="history_step_start_time" property="historyStepStartTime"/>
		<result column="history_step_end_time" property="historyStepEndTime"/>
		<result column="history_step_job_status" property="historyStepJobStatus"/>
		<result column="history_step_job_errmsg" property="historyStepJobErrmsg"/>
		<result column="history_step_associate_job_id" property="historyStepAssociateJobId"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		history_step_execution_id,history_step_job_id,history_step_job_name,history_step_start_time,history_step_end_time,history_step_job_status,
		history_step_job_errmsg,history_step_associate_job_id,create_date,valid_status,remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="historyStepExecutionId != null">history_step_execution_id,</if>
			<if test="historyStepJobId != null">history_step_job_id,</if>
			<if test="historyStepJobName != null">history_step_job_name,</if>
			<if test="historyStepStartTime != null">history_step_start_time,</if>
			<if test="historyStepEndTime != null">history_step_end_time,</if>
			<if test="historyStepJobStatus != null">history_step_job_status,</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg,</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="historyStepExecutionId != null">#{historyStepExecutionId},</if>
			<if test="historyStepJobId != null">#{historyStepJobId},</if>
			<if test="historyStepJobName != null">#{historyStepJobName},</if>
			<if test="historyStepStartTime != null">#{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">#{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">#{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">#{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">#{historyStepAssociateJobId},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTimingStepLogHistory">
		insert into batch_timing_step_log_history
		<include refid="BatchTimingStepLogHistory.Base_Insert_Column"/>
		values 
		<include refid="BatchTimingStepLogHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTimingStepLogHistory">
		insert into batch_timing_step_log_history
		<include refid="BatchTimingStepLogHistory.Base_Insert_Column"/>
		values 
		<include refid="BatchTimingStepLogHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_timing_step_log_history
		(history_step_execution_id,history_step_job_id,history_step_job_name,history_step_start_time,history_step_end_time
			,history_step_job_status,history_step_job_errmsg,history_step_associate_job_id,create_date
			,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.historyStepExecutionId},#{item.historyStepJobId},#{item.historyStepJobName},#{item.historyStepStartTime},#{item.historyStepEndTime}
				,#{item.historyStepJobStatus},#{item.historyStepJobErrmsg},#{item.historyStepAssociateJobId},#{item.createDate}
				,#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where history_step_execution_id = #{historyStepExecutionId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where history_step_execution_id = #{historyStepExecutionId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where history_step_execution_id = #{historyStepExecutionId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTimingStepLogHistory">
		delete from batch_timing_step_log_history
		where
		history_step_execution_id = #{historyStepExecutionId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTimingStepLogHistory">
		delete from batch_timing_step_log_history
		where
		history_step_execution_id = #{historyStepExecutionId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTimingStepLogHistory">
		update batch_timing_step_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="historyStepJobId != null">history_step_job_id = #{historyStepJobId},</if>
			<if test="historyStepJobName != null">history_step_job_name = #{historyStepJobName},</if>
			<if test="historyStepStartTime != null">history_step_start_time = #{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">history_step_end_time = #{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">history_step_job_status = #{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg = #{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id = #{historyStepAssociateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where history_step_execution_id = #{historyStepExecutionId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTimingStepLogHistory">
		update batch_timing_step_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="historyStepJobId != null">history_step_job_id = #{historyStepJobId},</if>
			<if test="historyStepJobName != null">history_step_job_name = #{historyStepJobName},</if>
			<if test="historyStepStartTime != null">history_step_start_time = #{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">history_step_end_time = #{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">history_step_job_status = #{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg = #{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id = #{historyStepAssociateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where history_step_execution_id = #{historyStepExecutionId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTimingStepLogHistory">
		update batch_timing_step_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="historyStepJobId != null">history_step_job_id = #{historyStepJobId},</if>
			<if test="historyStepJobName != null">history_step_job_name = #{historyStepJobName},</if>
			<if test="historyStepStartTime != null">history_step_start_time = #{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">history_step_end_time = #{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">history_step_job_status = #{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg = #{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id = #{historyStepAssociateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where history_step_execution_id = #{historyStepExecutionId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="org.mine.model.BatchTimingStepLogHistory">
		update batch_timing_step_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="historyStepJobId != null">history_step_job_id = #{historyStepJobId},</if>
			<if test="historyStepJobName != null">history_step_job_name = #{historyStepJobName},</if>
			<if test="historyStepStartTime != null">history_step_start_time = #{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">history_step_end_time = #{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">history_step_job_status = #{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg = #{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id = #{historyStepAssociateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where history_step_execution_id = #{historyStepExecutionId}
	</update>

	<update id="batchUpdate" parameterType="org.mine.model.BatchTimingStepLogHistory">
		update batch_timing_step_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="historyStepJobId != null">history_step_job_id = #{historyStepJobId},</if>
			<if test="historyStepJobName != null">history_step_job_name = #{historyStepJobName},</if>
			<if test="historyStepStartTime != null">history_step_start_time = #{historyStepStartTime},</if>
			<if test="historyStepEndTime != null">history_step_end_time = #{historyStepEndTime},</if>
			<if test="historyStepJobStatus != null">history_step_job_status = #{historyStepJobStatus},</if>
			<if test="historyStepJobErrmsg != null">history_step_job_errmsg = #{historyStepJobErrmsg},</if>
			<if test="historyStepAssociateJobId != null">history_step_associate_job_id = #{historyStepAssociateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where history_step_execution_id = #{historyStepExecutionId}
	</update>

	<select id="selectAll1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAssociateQueueId}
	</select>

	<select id="selectAll1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAssociateQueueId} and valid_status = '0'
	</select>

	<select id="selectAll1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAssociateQueueId} for update
	</select>

	<select id="selectAll2" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAutoFlag}
	</select>

	<select id="selectAll2R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAutoFlag} and valid_status = '0'
	</select>

	<select id="selectAll2L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingStepLogHistory.Base_Select_List"/>
		from batch_timing_step_log_history
		where null = #{taskAutoFlag} for update
	</select>

</mapper>