<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTimingJobLogRegister">
	<resultMap type="org.mine.model.BatchTimingJobLogRegister" id="BaseResultMap">
		<result column="execution_id" property="executionId"/>
		<result column="execution_instance" property="executionInstance"/>
		<result column="step_id" property="stepId"/>
		<result column="step_name" property="stepName"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="step_status" property="stepStatus"/>
		<result column="step_errmsg" property="stepErrmsg"/>
		<result column="associate_job_id" property="associateJobId"/>
		<result column="create_date" property="createDate"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		execution_id,execution_instance,step_id,step_name,start_time,end_time,
		step_status,step_errmsg,associate_job_id,create_date,valid_status,
		remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionId != null">execution_id,</if>
			<if test="executionInstance != null">execution_instance,</if>
			<if test="stepId != null">step_id,</if>
			<if test="stepName != null">step_name,</if>
			<if test="startTime != null">start_time,</if>
			<if test="endTime != null">end_time,</if>
			<if test="stepStatus != null">step_status,</if>
			<if test="stepErrmsg != null">step_errmsg,</if>
			<if test="associateJobId != null">associate_job_id,</if>
			<if test="createDate != null">create_date,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionId != null">#{executionId},</if>
			<if test="executionInstance != null">#{executionInstance},</if>
			<if test="stepId != null">#{stepId},</if>
			<if test="stepName != null">#{stepName},</if>
			<if test="startTime != null">#{startTime},</if>
			<if test="endTime != null">#{endTime},</if>
			<if test="stepStatus != null">#{stepStatus},</if>
			<if test="stepErrmsg != null">#{stepErrmsg},</if>
			<if test="associateJobId != null">#{associateJobId},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTimingJobLogRegister">
		insert into batch_timing_job_log_register
		<include refid="BatchTimingJobLogRegister.Base_Insert_Column"/>
		values 
		<include refid="BatchTimingJobLogRegister.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTimingJobLogRegister">
		insert into batch_timing_job_log_register
		<include refid="BatchTimingJobLogRegister.Base_Insert_Column"/>
		values 
		<include refid="BatchTimingJobLogRegister.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_timing_job_log_register
		(execution_id,execution_instance,step_id,step_name,start_time
			,end_time,step_status,step_errmsg,associate_job_id
			,create_date,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.executionId},#{item.executionInstance},#{item.stepId},#{item.stepName},#{item.startTime}
				,#{item.endTime},#{item.stepStatus},#{item.stepErrmsg},#{item.associateJobId}
				,#{item.createDate},#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_id = #{executionId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_id = #{executionId} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_id = #{executionId} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTimingJobLogRegister">
		delete from batch_timing_job_log_register
		where
		execution_id = #{executionId}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTimingJobLogRegister">
		delete from batch_timing_job_log_register
		where
		execution_id = #{executionId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="executionInstance != null">execution_instance = #{executionInstance},</if>
			<if test="stepId != null">step_id = #{stepId},</if>
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_id = #{executionId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="executionInstance != null">execution_instance = #{executionInstance},</if>
			<if test="stepId != null">step_id = #{stepId},</if>
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_id = #{executionId} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="executionInstance != null">execution_instance = #{executionInstance},</if>
			<if test="stepId != null">step_id = #{stepId},</if>
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_id = #{executionId} for update
	</update>

	<select id="selectOne2" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_instance = #{executionInstance} and step_id = #{stepId}
	</select>

	<select id="selectOne2R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_instance = #{executionInstance} and step_id = #{stepId} and valid_status = '0'
	</select>

	<select id="selectOne2L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTimingJobLogRegister.Base_Select_List"/>
		from batch_timing_job_log_register
		where execution_instance = #{executionInstance} and step_id = #{stepId} for update
	</select>

	<delete id="deleteOne2" parameterType="org.mine.model.BatchTimingJobLogRegister">
		delete from batch_timing_job_log_register
		where
		execution_instance = #{executionInstance} and step_id = #{stepId}
	</delete>

	<delete id="deleteOne2L" parameterType="org.mine.model.BatchTimingJobLogRegister">
		delete from batch_timing_job_log_register
		where
		execution_instance = #{executionInstance} and step_id = #{stepId} for update
	</delete>

	<update id="updateOne2" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and step_id = #{stepId}
	</update>

	<update id="updateOne2R" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and step_id = #{stepId} and valid_status = '0'
	</update>

	<update id="updateOne2L" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and step_id = #{stepId} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_id = #{executionId}
	</update>

	<update id="batchUpdate2" parameterType="org.mine.model.BatchTimingJobLogRegister">
		update batch_timing_job_log_register
		<trim prefix="set" suffixOverrides=",">
			<if test="stepName != null">step_name = #{stepName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="stepStatus != null">step_status = #{stepStatus},</if>
			<if test="stepErrmsg != null">step_errmsg = #{stepErrmsg},</if>
			<if test="associateJobId != null">associate_job_id = #{associateJobId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and step_id = #{stepId}
	</update>

	<update id="batchUpdateXML" parameterType="java.util.List">
		update batch_timing_job_log_register set
		<trim prefix="step_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.stepName != null">
					when execution_id = #{item.executionId} then #{item.stepName}
				</if>
			</foreach>
		</trim>
		<trim prefix="start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.startTime != null">
					when execution_id = #{item.executionId} then #{item.startTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.endTime != null">
					when execution_id = #{item.executionId} then #{item.endTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="step_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.stepStatus != null">
					when execution_id = #{item.executionId} then #{item.stepStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="step_errmsg=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.stepErrmsg != null">
					when execution_id = #{item.executionId} then #{item.stepErrmsg}
				</if>
			</foreach>
		</trim>
		<trim prefix="associate_job_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.associateJobId != null">
					when execution_id = #{item.executionId} then #{item.associateJobId}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when execution_id = #{item.executionId} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when execution_id = #{item.executionId} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when execution_id = #{item.executionId} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		execution_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.executionId}
		</foreach>
	</update>
</mapper>