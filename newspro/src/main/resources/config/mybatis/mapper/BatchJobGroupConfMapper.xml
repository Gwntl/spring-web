<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchJobGroupConf">
	<resultMap type="org.mine.model.BatchJobGroupConf" id="BaseResultMap">
		<result column="job_group_id" property="jobGroupId"/>
		<result column="job_group_name" property="jobGroupName"/>
		<result column="job_group_savelog" property="jobGroupSavelog"/>
		<result column="job_group_rerun" property="jobGroupRerun"/>
		<result column="job_group_number" property="jobGroupNumber"/>
		<result column="job_group_maintenance_date" property="jobGroupMaintenanceDate"/>
		<result column="vaild_status" property="vaildStatus"/>
		<result column="job_group_remark" property="jobGroupRemark"/>
	</resultMap>

	<sql id="Base_Select_List">
		job_group_id,job_group_name,job_group_savelog,job_group_rerun,job_group_number,job_group_maintenance_date,
		vaild_status,job_group_remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobGroupId != null">job_group_id,</if>
			<if test="jobGroupName != null">job_group_name,</if>
			<if test="jobGroupSavelog != null">job_group_savelog,</if>
			<if test="jobGroupRerun != null">job_group_rerun,</if>
			<if test="jobGroupNumber != null">job_group_number,</if>
			<if test="jobGroupMaintenanceDate != null">job_group_maintenance_date,</if>
			<if test="vaildStatus != null">vaild_status,</if>
			<if test="jobGroupRemark != null">job_group_remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobGroupId != null">#{jobGroupId},</if>
			<if test="jobGroupName != null">#{jobGroupName},</if>
			<if test="jobGroupSavelog != null">#{jobGroupSavelog},</if>
			<if test="jobGroupRerun != null">#{jobGroupRerun},</if>
			<if test="jobGroupNumber != null">#{jobGroupNumber},</if>
			<if test="jobGroupMaintenanceDate != null">#{jobGroupMaintenanceDate},</if>
			<if test="vaildStatus != null">#{vaildStatus},</if>
			<if test="jobGroupRemark != null">#{jobGroupRemark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchJobGroupConf">
		insert into batch_job_group_conf
		<include refid="BatchJobGroupConf.Base_Insert_Column"/>
		values 
		<include refid="BatchJobGroupConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchJobGroupConf">
		insert into batch_job_group_conf
		<include refid="BatchJobGroupConf.Base_Insert_Column"/>
		values 
		<include refid="BatchJobGroupConf.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_job_group_conf
		(job_group_id,job_group_name,job_group_savelog,job_group_rerun,job_group_number
			,job_group_maintenance_date,vaild_status,job_group_remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.jobGroupId},#{item.jobGroupName},#{item.jobGroupSavelog},#{item.jobGroupRerun},#{item.jobGroupNumber}
				,#{item.jobGroupMaintenanceDate},#{item.vaildStatus},#{item.jobGroupRemark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobGroupConf.Base_Select_List"/>
		from batch_job_group_conf
		where job_group_id = #{jobGroupId}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobGroupConf.Base_Select_List"/>
		from batch_job_group_conf
		where job_group_id = #{jobGroupId} and vaild_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchJobGroupConf.Base_Select_List"/>
		from batch_job_group_conf
		where job_group_id = #{jobGroupId} for update
	</select>

	<delete id="deleteOne1" parameterType="java.util.HashMap">
		delete from batch_job_group_conf
		where job_group_id = #{jobGroupId}
	</delete>

	<delete id="deleteOne1L" parameterType="java.util.HashMap">
		delete from batch_job_group_conf
		where job_group_id = #{jobGroupId} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchJobGroupConf">
		update batch_job_group_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobGroupName != null">job_group_name = #{jobGroupName},</if>
			<if test="jobGroupSavelog != null">job_group_savelog = #{jobGroupSavelog},</if>
			<if test="jobGroupRerun != null">job_group_rerun = #{jobGroupRerun},</if>
			<if test="jobGroupNumber != null">job_group_number = #{jobGroupNumber},</if>
			<if test="jobGroupMaintenanceDate != null">job_group_maintenance_date = #{jobGroupMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobGroupRemark != null">job_group_remark = #{jobGroupRemark},</if>
		</trim>
		where job_group_id = #{jobGroupId}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchJobGroupConf">
		update batch_job_group_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobGroupName != null">job_group_name = #{jobGroupName},</if>
			<if test="jobGroupSavelog != null">job_group_savelog = #{jobGroupSavelog},</if>
			<if test="jobGroupRerun != null">job_group_rerun = #{jobGroupRerun},</if>
			<if test="jobGroupNumber != null">job_group_number = #{jobGroupNumber},</if>
			<if test="jobGroupMaintenanceDate != null">job_group_maintenance_date = #{jobGroupMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobGroupRemark != null">job_group_remark = #{jobGroupRemark},</if>
		</trim>
		where job_group_id = #{jobGroupId} and vaild_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchJobGroupConf">
		update batch_job_group_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobGroupName != null">job_group_name = #{jobGroupName},</if>
			<if test="jobGroupSavelog != null">job_group_savelog = #{jobGroupSavelog},</if>
			<if test="jobGroupRerun != null">job_group_rerun = #{jobGroupRerun},</if>
			<if test="jobGroupNumber != null">job_group_number = #{jobGroupNumber},</if>
			<if test="jobGroupMaintenanceDate != null">job_group_maintenance_date = #{jobGroupMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobGroupRemark != null">job_group_remark = #{jobGroupRemark},</if>
		</trim>
		where job_group_id = #{jobGroupId} for update
	</update>

	<update id="batchUpdateXML1" parameterType="java.util.List">
		update batch_job_group_conf set
		<trim prefix="job_group_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupName != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupName}
				</if>
			</foreach>
		</trim>
		<trim prefix="job_group_savelog=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupSavelog != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupSavelog}
				</if>
			</foreach>
		</trim>
		<trim prefix="job_group_rerun=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupRerun != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupRerun}
				</if>
			</foreach>
		</trim>
		<trim prefix="job_group_number=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupNumber != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupNumber}
				</if>
			</foreach>
		</trim>
		<trim prefix="job_group_maintenance_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupMaintenanceDate != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupMaintenanceDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="vaild_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.vaildStatus != null">
					when job_group_id = #{item.jobGroupId} then #{item.vaildStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="job_group_remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.jobGroupRemark != null">
					when job_group_id = #{item.jobGroupId} then #{item.jobGroupRemark}
				</if>
			</foreach>
		</trim>
		where
		job_group_id in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.jobGroupId}
		</foreach>
	</update>
	<update id="batchUpdate" parameterType="org.mine.model.BatchJobGroupConf">
		update batch_job_group_conf
		<trim prefix="set" suffixOverrides=",">
			<if test="jobGroupName != null">job_group_name = #{jobGroupName},</if>
			<if test="jobGroupSavelog != null">job_group_savelog = #{jobGroupSavelog},</if>
			<if test="jobGroupRerun != null">job_group_rerun = #{jobGroupRerun},</if>
			<if test="jobGroupNumber != null">job_group_number = #{jobGroupNumber},</if>
			<if test="jobGroupMaintenanceDate != null">job_group_maintenance_date = #{jobGroupMaintenanceDate},</if>
			<if test="vaildStatus != null">vaild_status = #{vaildStatus},</if>
			<if test="jobGroupRemark != null">job_group_remark = #{jobGroupRemark},</if>
		</trim>
		where job_group_id = #{jobGroupId}
	</update>

</mapper>