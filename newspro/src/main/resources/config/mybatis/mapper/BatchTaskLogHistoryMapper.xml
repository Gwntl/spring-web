<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BatchTaskLogHistory">
	<resultMap type="org.mine.model.BatchTaskLogHistory" id="BaseResultMap">
		<result column="execution_instance" property="executionInstance"/>
		<result column="task_id" property="taskId"/>
		<result column="task_name" property="taskName"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="task_status" property="taskStatus"/>
		<result column="task_errmsg" property="taskErrmsg"/>
		<result column="associate_queue_id" property="associateQueueId"/>
		<result column="create_date" property="createDate"/>
		<result column="time_stamp" property="timeStamp"/>
		<result column="valid_status" property="validStatus"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Select_List">
		execution_instance,task_id,task_name,start_time,end_time,task_status,
		task_errmsg,associate_queue_id,create_date,time_stamp,valid_status,
		remark
	</sql>

	<sql id="Base_Insert_Column">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionInstance != null">execution_instance,</if>
			<if test="taskId != null">task_id,</if>
			<if test="taskName != null">task_name,</if>
			<if test="startTime != null">start_time,</if>
			<if test="endTime != null">end_time,</if>
			<if test="taskStatus != null">task_status,</if>
			<if test="taskErrmsg != null">task_errmsg,</if>
			<if test="associateQueueId != null">associate_queue_id,</if>
			<if test="createDate != null">create_date,</if>
			<if test="timeStamp != null">time_stamp,</if>
			<if test="validStatus != null">valid_status,</if>
			<if test="remark != null">remark,</if>
		</trim>
	</sql>

	<sql id="Base_Insert_Values">
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="executionInstance != null">#{executionInstance},</if>
			<if test="taskId != null">#{taskId},</if>
			<if test="taskName != null">#{taskName},</if>
			<if test="startTime != null">#{startTime},</if>
			<if test="endTime != null">#{endTime},</if>
			<if test="taskStatus != null">#{taskStatus},</if>
			<if test="taskErrmsg != null">#{taskErrmsg},</if>
			<if test="associateQueueId != null">#{associateQueueId},</if>
			<if test="createDate != null">#{createDate},</if>
			<if test="timeStamp != null">#{timeStamp},</if>
			<if test="validStatus != null">#{validStatus},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</sql>

	<insert id="insertOne" parameterType="org.mine.model.BatchTaskLogHistory">
		insert into batch_task_log_history
		<include refid="BatchTaskLogHistory.Base_Insert_Column"/>
		values 
		<include refid="BatchTaskLogHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsert" parameterType="org.mine.model.BatchTaskLogHistory">
		insert into batch_task_log_history
		<include refid="BatchTaskLogHistory.Base_Insert_Column"/>
		values 
		<include refid="BatchTaskLogHistory.Base_Insert_Values"/>
	</insert>

	<insert id="batchInsertXML" parameterType="java.util.List">
		insert into batch_task_log_history
		(execution_instance,task_id,task_name,start_time,end_time
			,task_status,task_errmsg,associate_queue_id,create_date
			,time_stamp,valid_status,remark)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.executionInstance},#{item.taskId},#{item.taskName},#{item.startTime},#{item.endTime}
				,#{item.taskStatus},#{item.taskErrmsg},#{item.associateQueueId},#{item.createDate}
				,#{item.timeStamp},#{item.validStatus},#{item.remark})
		</foreach>
	</insert>
	<select id="selectOne1" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskLogHistory.Base_Select_List"/>
		from batch_task_log_history
		where execution_instance = #{executionInstance}
	</select>

	<select id="selectOne1R" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskLogHistory.Base_Select_List"/>
		from batch_task_log_history
		where execution_instance = #{executionInstance} and valid_status = '0'
	</select>

	<select id="selectOne1L" parameterType="java.util.HashMap" resultMap="BaseResultMap">
		select
		<include refid="BatchTaskLogHistory.Base_Select_List"/>
		from batch_task_log_history
		where execution_instance = #{executionInstance} for update
	</select>

	<delete id="deleteOne1" parameterType="org.mine.model.BatchTaskLogHistory">
		delete from batch_task_log_history
		where
		execution_instance = #{executionInstance}
	</delete>

	<delete id="deleteOne1L" parameterType="org.mine.model.BatchTaskLogHistory">
		delete from batch_task_log_history
		where
		execution_instance = #{executionInstance} for update
	</delete>

	<update id="updateOne1" parameterType="org.mine.model.BatchTaskLogHistory">
		update batch_task_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="taskId != null">task_id = #{taskId},</if>
			<if test="taskName != null">task_name = #{taskName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="taskStatus != null">task_status = #{taskStatus},</if>
			<if test="taskErrmsg != null">task_errmsg = #{taskErrmsg},</if>
			<if test="associateQueueId != null">associate_queue_id = #{associateQueueId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance}
	</update>

	<update id="updateOne1R" parameterType="org.mine.model.BatchTaskLogHistory">
		update batch_task_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="taskId != null">task_id = #{taskId},</if>
			<if test="taskName != null">task_name = #{taskName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="taskStatus != null">task_status = #{taskStatus},</if>
			<if test="taskErrmsg != null">task_errmsg = #{taskErrmsg},</if>
			<if test="associateQueueId != null">associate_queue_id = #{associateQueueId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} and valid_status = '0'
	</update>

	<update id="updateOne1L" parameterType="org.mine.model.BatchTaskLogHistory">
		update batch_task_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="taskId != null">task_id = #{taskId},</if>
			<if test="taskName != null">task_name = #{taskName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="taskStatus != null">task_status = #{taskStatus},</if>
			<if test="taskErrmsg != null">task_errmsg = #{taskErrmsg},</if>
			<if test="associateQueueId != null">associate_queue_id = #{associateQueueId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance} for update
	</update>

	<update id="batchUpdate1" parameterType="org.mine.model.BatchTaskLogHistory">
		update batch_task_log_history
		<trim prefix="set" suffixOverrides=",">
			<if test="taskId != null">task_id = #{taskId},</if>
			<if test="taskName != null">task_name = #{taskName},</if>
			<if test="startTime != null">start_time = #{startTime},</if>
			<if test="endTime != null">end_time = #{endTime},</if>
			<if test="taskStatus != null">task_status = #{taskStatus},</if>
			<if test="taskErrmsg != null">task_errmsg = #{taskErrmsg},</if>
			<if test="associateQueueId != null">associate_queue_id = #{associateQueueId},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="timeStamp != null">time_stamp = #{timeStamp},</if>
			<if test="validStatus != null">valid_status = #{validStatus},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
		where execution_instance = #{executionInstance}
	</update>

	<update id="batchUpdateXML" parameterType="java.util.List">
		update batch_task_log_history set
		<trim prefix="task_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskId != null">
					when execution_instance = #{item.executionInstance} then #{item.taskId}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_name=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskName != null">
					when execution_instance = #{item.executionInstance} then #{item.taskName}
				</if>
			</foreach>
		</trim>
		<trim prefix="start_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.startTime != null">
					when execution_instance = #{item.executionInstance} then #{item.startTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="end_time=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.endTime != null">
					when execution_instance = #{item.executionInstance} then #{item.endTime}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskStatus != null">
					when execution_instance = #{item.executionInstance} then #{item.taskStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="task_errmsg=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.taskErrmsg != null">
					when execution_instance = #{item.executionInstance} then #{item.taskErrmsg}
				</if>
			</foreach>
		</trim>
		<trim prefix="associate_queue_id=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.associateQueueId != null">
					when execution_instance = #{item.executionInstance} then #{item.associateQueueId}
				</if>
			</foreach>
		</trim>
		<trim prefix="create_date=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.createDate != null">
					when execution_instance = #{item.executionInstance} then #{item.createDate}
				</if>
			</foreach>
		</trim>
		<trim prefix="time_stamp=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.timeStamp != null">
					when execution_instance = #{item.executionInstance} then #{item.timeStamp}
				</if>
			</foreach>
		</trim>
		<trim prefix="valid_status=case" suffix="end,">
			<foreach collection="list" item="item" index="index">
				<if test="item.validStatus != null">
					when execution_instance = #{item.executionInstance} then #{item.validStatus}
				</if>
			</foreach>
		</trim>
		<trim prefix="remark=case" suffix="end">
			<foreach collection="list" item="item" index="index">
				<if test="item.remark != null">
					when execution_instance = #{item.executionInstance} then #{item.remark}
				</if>
			</foreach>
		</trim>
		where
		execution_instance in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item.executionInstance}
		</foreach>
	</update>
</mapper>